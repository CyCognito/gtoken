name: Docker Image CI

on:
  push:
    branches:
      - '*'
    tags:
      - '*'

jobs:

  build:
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    runs-on: ubuntu-18.04
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    steps:
    - uses: actions/checkout@v1

    - name: decide on tag
      run: |
        image_tag=$(echo $GITHUB_REF | sed -e 's/refs\/heads\///g' -e 's/refs\/tags\///g' | sed -e 's/master/latest/g')
        echo "${image_tag}" > ./cmd/gtoken/.version
        echo "${image_tag}" > ./cmd/gtoken-webhook/.version
        echo "::debug::decide on image tag ${image_tag}"
        echo "::set-env name=IMAGE_TAG::${image_tag}"

    - name: build image
      env:
        DOCKER_BUILDKIT: 1
        DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
      run: |
        docker build --tag ${DOCKER_REPOSITORY}/gtoken:${IMAGE_TAG} cmd/gtoken
        docker build --tag ${DOCKER_REPOSITORY}/gtoken:${IMAGE_TAG}-alpine --target certs cmd/gtoken
        docker build --tag ${DOCKER_REPOSITORY}/gtoken-daemon:${IMAGE_TAG} --file Dockerfile-daemon cmd/gtoken/daemon
        docker build --tag ${DOCKER_REPOSITORY}/gtoken-webhook:${IMAGE_TAG} cmd/gtoken-webhook

    - name: push image
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
      run: |
        echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
        docker push ${DOCKER_REPOSITORY}/gtoken:${IMAGE_TAG}
        docker push ${DOCKER_REPOSITORY}/gtoken:${IMAGE_TAG}-alpine
        docker push ${DOCKER_REPOSITORY}/gtoken-daemon:${IMAGE_TAG}
        docker push ${DOCKER_REPOSITORY}/gtoken-webhook:${IMAGE_TAG}
        docker logout