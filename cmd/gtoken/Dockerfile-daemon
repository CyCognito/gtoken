# syntax = docker/dockerfile:experimental

#
# ----- Go Builder Image ------
#
FROM golang:1.16-alpine AS builder

# curl git bash
RUN apk add --no-cache curl git bash make
COPY --from=golangci/golangci-lint:v1.24-alpine /usr/bin/golangci-lint /usr/bin

#
# ----- Build and Test Image -----
#
FROM builder as build

# set working directorydoc
RUN mkdir -p /go/src/gtoken/gtoken-daemon /go/src/gtoken/internal
WORKDIR /go/src/gtoken/gtoken-daemon

# load dependency
COPY daemon/go.mod .
COPY daemon/go.sum .
COPY internal/aws internal/aws
COPY internal/gcp/ internal/gcp
RUN --mount=type=cache,target=/go/mod go mod download

# copy sources
COPY daemon/* .

# build
RUN make

#
# ------ get latest CA certificates
#
FROM alpine:3 as certs
RUN apk --update add ca-certificates

#
# ------ gtoken release Docker image ------
#
FROM scratch

# copy CA certificates
COPY --from=certs /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt

# this is the last command since it's never cached

COPY --from=build /go/src/gtoken/gtoken-daemon/.bin/github.com/doitintl/gtoken/daemon /gtoken-daemon
ENTRYPOINT ["/gtoken-daemon"]
